APP_NAME = "SIG-PNP"

# url d'accès à l'application
# Remplacer par l'url de votre instance sans '/' à la fin
# Exemple : "http://carto.parc-pyrenees.fr"
APP_URL = ""

# Chaine de connexion à la base de données de l'application
SQLALCHEMY_DATABASE_URI = "postgresql://<USER>:<PASSWORD>@<HOST>:<PORT>/<DB_NAME>"

# Chaine de connexion à la base de données hebergeant les données SIG
SQLALCHEMY_SIG_DATABASE_URI = "postgresql://<USER>:<PASSWORD>@<HOST>:<PORT>/<DB_NAME>"

# Active (=true) ou pas (=false) le système de suivi de modification de SQLAlchemy
# Note : l'API event de SQLAchemy n'étant pas utilisée, la désactivation économise des ressources.
# Note : Patch pour suivre la supression des médias et pouvoir supprimer un fichier sur un DELETE de media
SQLALCHEMY_TRACK_MODIFICATIONS = false

# URL vers l'instance Geonature
# Remplacer par l'url de votre instance GeoNature sans '/' à la fin
# Exemple : "https://geonature.pyrenees-parcnational.fr"
GEONATURE_URL = "" 

# Identifiant de la liste de taxon à utiliser pour l'auto-complete
# par defaut 100
TAXHUB_LIST_ID = 100

# Identifiant de l'application dans userhub
# l'application doit préalablement être déclaré dans usershub
ID_APPLICATION = 

# Lien vers le catalogue de métadonnée (GeoNetwork)
GEONETWORK_URL = ""
GEONETWORK_USER = ""
GEONETWORK_PASSWORD = ""

# Logo de la structure affiché dans l'entête de l'interface
# Le logo doit être dans le dossier backend/static/images/
LOGO_STRUCTURE = "logo_structure.png"

# Activer le mode développement
DEBUG = false # true | false
ENV = "production" # "production" | "development"

# Configuration de la carte
# Exemple : [-0.16777084451550842, 42.922276035501696]
CENTER = [<LAT>, <LONG>]
ZOOM_LEVEL = 10

# Projection des données
SRID = 2154

# Définition des bornes des classes pour les données d'observations (richesse taxonomique et pression d'observation)
# les classes sont défini en percentile (de 0 à 1) dans une limite de 4 bornes
OBS_LAYER_CLASSIFICATION_BORNE = [0.1, 0.2, 0.4, 0.8]

# Couleurs attribuées pour chaque classe
# Le nombre de couleur doit correspondre au nombre de borne + 1
OBS_LAYER_CLASS_COLOR = ["rgba(237, 248, 251, 0.9)", "rgba(179, 205, 227, 0.9)", "rgba(140, 150, 198, 0.9)", "rgba(136, 86, 167, 0.9)", "rgba(129, 15, 124, 0.9)"]

# Fond de carte
[[BASEMAPS]]
    type = "Tile"
    name = "IGN-Orthophotos"
    url = "https://data.geopf.fr/wmts?SERVICE=WMTS&REQUEST=GetTile"
    layer = "ORTHOIMAGERY.ORTHOPHOTOS"
    attributions = "IGN"
    isDefault = 0
    format = "image/jpeg"
    isStackable = 0
[[BASEMAPS]]
    type = "Tile"
    name = "IGN-Plan"
    url = "https://data.geopf.fr/wmts?SERVICE=WMTS&REQUEST=GetTile"
    layer = "GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2"
    attributions = "IGN"
    isDefault = 0
    format = "image/png"
    isStackable = 0
[[BASEMAPS]]
    type = "Tile"
    name = "IGN-Pente"
    url = "https://data.geopf.fr/wmts?SERVICE=WMTS&VERSION=1.0.0&REQUEST=GetTile"
    layer = "GEOGRAPHICALGRIDSYSTEMS.SLOPES.MOUNTAIN"
    attributions = "©IGN"
    isDefault = 0 
    format = "image/png"
    isStackable = 1
[[BASEMAPS]]
    type = "XYZ"
    name = "OSM-OpenTopoMap"
    url = "https://{a-c}.tile.opentopomap.org/{z}/{x}/{y}.png"
    layer = ""
    attributions = "©OSM"
    isDefault = 0
    format = ""
    isStackable = 0
